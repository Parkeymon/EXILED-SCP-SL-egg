{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2021-03-03T11:49:41-08:00",
    "name": "EXILED SCP:SL Egg",
    "author": "info@goover.de",
    "description": "Egg for SCP: Secret Laboratory Dedicated Linux Server",
    "features": null,
    "images": [
        "quay.io\/parkeymon\/exiled-scpsl-image:latest"
    ],
    "file_denylist": "",
    "startup": ".\/start.sh {{SERVER_PORT}}",
    "config": {
        "files": "{\r\n    \"config_gameplay.txt\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"server_ip\": \"0.0.0.0\",\r\n            \"forward_ports\": \"false\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Waiting for players..\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{\r\n    \"custom\": false,\r\n    \"location\": \"logs\/latest.log\"\r\n}",
        "stop": "exit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'debian:buster-slim'\r\napt -y update\r\napt -y --no-install-recommends install curl lib32gcc1 ca-certificates\r\napt-get update\r\napt-get -y install libicu63\r\napt-get update\r\napt-get -y install wget\r\napt-get update\r\necho \"$(tput setaf 4)Installing NPM$(tput setaf 0)\"\r\napt-get -y install npm\r\napt-get update\r\napt-get -y install libsdl2-2.0-0:i386\r\n\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\nif [ \"${BETA_TAG}\" == \"none\" ]; then\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update ${SRCDS_APPID} validate +quit\r\nelse\r\n    .\/steamcmd.sh +login anonymous +force_install_dir \/mnt\/server +app_update ${SRCDS_APPID} ${BETA_TAG} validate +quit\r\nfi\r\n## install game using steamcmd\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\ncd \/mnt\/server\r\n\r\nif [ \"${INSTALL_MULTIADMIN}\" == \"true\" ]; then \r\n    echo \"Installing MultiAdmin..\"\r\n    rm MultiAdmin.exe\r\n    wget https:\/\/github.com\/ServerMod\/MultiAdmin\/releases\/download\/3.4.0.0-alpha\/MultiAdmin.exe\r\n    chmod +x MultiAdmin.exe\r\n    \r\n    echo \"Configuring scp_multiadmin.cfg\"\r\n    rm scp_multiadmin.cfg\r\n    touch \"scp_multiadmin.cfg\"\r\n    echo \"use_new_input_system: false\" > scp_multiadmin.cfg\r\n    echo \"Configure scp_multiadmin.cfg done.\"\r\nelse\r\n    echo \"$(tput setaf 4)Using LocalAdmin.$(tput setaf 0)\"\r\nfi\r\n\r\necho \"$(tput setaf 4)Configuring start.sh$(tput setaf 0)\"\r\nrm start.sh\r\ntouch \"start.sh\"\r\nchmod +x .\/start.sh\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ] \r\nthen\r\n    echo \"#!\/bin\/bash\r\n    node DiscordIntegrationBot\/discordIntegration.js > \/dev\/null &\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin and Discord Integration.$(tput setaf 0)\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"false\" ] && [ \"${INSTALL_MULTIADMIN}\" == \"false\" ]\r\nthen\r\necho \"#!\/bin\/bash\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin.$(tput setaf 0)\"\r\n\r\nelif [ \"${INSTALL_BOT}\" == \"true\" ] \r\n\r\nthen\r\n    echo \"#!\/bin\/bash\r\n    node DiscordIntegrationBot\/discordIntegration.js > \/dev\/null &\r\n    mono MultiAdmin.exe --port \\${SERVER_PORT}\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for MultiAdmin and Discord Integration.$(tput setaf 0)\"\r\n\r\nelse\r\n    echo \"#!\/bin\/bash\r\n    mono MultiAdmin.exe --port \\$1\" >> start.sh\r\n    echo \"$(tput setaf 4)Finished configuring start.sh for MultiAdmin.$(tput setaf 0)\"\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n       \r\n        echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n        rm -r Bot\r\n\r\n        mkdir DiscordIntegrationBot\r\n        echo \"$(tput setaf 4)Installing latest Discord Integration bot version.$(tput setaf 0)\"\r\n        wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/DiscordIntegration.Bot.tar.gz\r\n        tar xzvf DiscordIntegration.Bot.tar.gz -C DiscordIntegrationBot\/\r\n        rm DiscordIntegration.Bot.tar.gz\r\n        \r\n        echo \"$(tput setaf 4)Updating Packages$(tput setaf 0)\"\r\n        #Couldnt find better way to do this dont jundge <3\r\n        cd DiscordIntegrationBot\r\n        npm i\r\n        cd ..\/\r\n\r\n    else\r\n        echo \"Installing Discord Integration Version: ${BOT_VERSION}..\"\r\n        wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/download\/${BOT_VERSION}\/Bot.tar.gz\r\n        echo \"$(tput setaf 4)Removing old bot version if it still exists.$(tput setaf 0)\"\r\n        rm -r Bot\r\n        echo \"$(tput setaf 4)Removing previous (updated) bot if it exists.$(tput setaf 0)\"\r\n        rm -r DiscordIntegration.Bot\r\n        tar xzvf DiscordIntegration.Bot.tar.gz\r\n        rm DiscordIntegration.Bot.tar.gz\r\n        chmod +x Bot\/DiscordIntegration_Bot.exe\r\n    fi\r\nelse\r\n    echo \"$(tput setaf 4)Skipping bot install...$(tput setaf 0)\"\r\n\r\nfi\r\n\r\nif [ \"${INSTALL_EXILED}\" == \"true\" ]; then\r\n    echo \"$(tput setaf 4)Downloading $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n    mkdir .config\/\r\n    echo \"$(tput setaf 4)Downloading latest $(tput setaf 1)EXILED$(tput setaf 4) Installer$(tput setaf 0)\"\r\n    rm Exiled.Installer-Linux\r\n    wget https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n    echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n    chmod +x .\/Exiled.Installer-Linux\r\n    .\/Exiled.Installer-Linux --pre-releases\r\nelse\r\n    echo \"Skipping Exiled installation.\"\r\n\r\nfi\r\n\r\nif [ \"${REMOVE_UPDATER}\" == \"true\" ]; then\r\n    echo \"Removing Exiled updater.\"\r\n    rm .config\/EXILED\/Plugins\/Exiled.Updater.dll\r\nelse\r\n    echo \"Not removing Exiled updater.\"\r\nfi\r\n\r\nif [ \"${INSTALL_INTEGRATION}\" == \"true\" ]; then\r\n    if [ \"${BOT_VERSION}\" == \"latest\" ]; then\r\n        echo Installing Discord Latest Integration Plugin...\r\n        #Moves to plugin folder for plugin installation. \r\n        cd .config\/EXILED\/Plugins\r\n\r\n        echo \"Removing old Discord Integreation (if it exists)\"\r\n        rm DiscordIntegration_Plugin.dll\r\n        rm DiscordIntegration.dll\r\n\r\n        echo \"Grabbing plugin and dependencies.\"\r\n        wget https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/Plugin.tar.gz\r\n\r\n        echo \"Extacting...\"\r\n        tar xzvf Plugin.tar.gz\r\n        rm Plugin.tar.gz\r\n\r\n    else\r\n        echo \"Installing Discord Integration Plugin Version: ${BOT_VERSION}\"\r\n    fi\r\nfi\r\n\r\nif  [ \"${INSTALL_ADMINTOOLS}\" == \"true\" ]; then\r\n    echo \"Removing current Admin Tools\"\r\n    rm AdminTools.dll\r\n    echo \"Installing latest Admin Tools\"\r\n    wget https:\/\/github.com\/Exiled-Team\/AdminTools\/releases\/latest\/download\/AdminTools.dll\r\nelse\r\n    echo \"Skipping Admin Tools install.\"\r\nfi\r\n\r\nif [ \"${INSTALL_UTILITIES}\" == \"true\" ]; then\r\n    echo \"Removing existing Common Utilities version.\"\r\n    rm Common_Utilities.dll\r\n    echo \"Installing Common Utilities.\"\r\n    wget https:\/\/github.com\/Exiled-Team\/Common-Utils\/releases\/latest\/download\/Common_Utilities.dll\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]\r\nthen\r\n    echo \"Dont forget to configure the discord bot in \/home\/container\/config.yml (not in DiscordIntegrationBot\/) after you start the server once.\"\r\n    echo \"$(tput setaf 2)Installation Complete!$(tput sgr 0)\"\r\nelse\r\n    echo \"$(tput setaf 2)Installation Complete!$(tput sgr 0)\"\r\nfi",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "996560",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Beta Tag",
            "description": "",
            "env_variable": "BETA_TAG",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:20"
        },
        {
            "name": "Install Exiled?",
            "description": "",
            "env_variable": "INSTALL_EXILED",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Install Discord Integration Bot?",
            "description": "",
            "env_variable": "INSTALL_BOT",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Discord Integration Version",
            "description": "Check versions at https:\/\/github.com\/galaxy119\/DiscordIntegration\/releases Version numbers look like \"2.3.0\". Otherwise use \"latest\" to download the latest version.",
            "env_variable": "BOT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20"
        },
        {
            "name": "Install Discord Integration Plugin?",
            "description": "Intstalls the discord integration plugin.",
            "env_variable": "INSTALL_INTEGRATION",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Admin Tools?",
            "description": "Automatically installs\/updates admin tools.",
            "env_variable": "INSTALL_ADMINTOOLS",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Remove Exiled Updater?",
            "description": "Exiled updater sometimes caused problem, this willautomatically remove it if you want it to.",
            "env_variable": "REMOVE_UPDATER",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        },
        {
            "name": "Install Common Utilities Plugin?",
            "description": "Automatically installs\/updates common utilities.",
            "env_variable": "INSTALL_UTILITIES",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5"
        }
    ]
}
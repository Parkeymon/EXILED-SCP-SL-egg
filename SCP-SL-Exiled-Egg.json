{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-06-18T23:02:23-07:00",
    "name": "EXILED SCP:SL Egg",
    "author": "pwolfe@stealthturtle.com",
    "description": "Egg for SCP: Secret Laboratory Dedicated Linux Server",
    "features": null,
    "docker_images": {
        "quay.io\/parkeymon\/exiled-scpsl-image:latest": "quay.io\/parkeymon\/exiled-scpsl-image:box64"
    },
    "file_denylist": [],
    "startup": ".\/.egg\/start.sh {{SERVER_PORT}}",
    "config": {
        "files": "{\r\n    \"config_gameplay.txt\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"server_ip\": \"0.0.0.0\",\r\n            \"forward_ports\": \"false\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Waiting for players..\"\r\n}",
        "logs": "{}",
        "stop": "exit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n\r\necho \"\r\n$(tput setaf 4)  ____________________________       ______________\r\n$(tput setaf 4) \/   _____\/\\_   ___ \\______   \\ \/\\  \/   _____\/|    |\r\n$(tput setaf 4) \\_____  \\ \/    \\  \\\/|     ___\/ \\\/  \\_____  \\ |    |\r\n$(tput setaf 4) \/        ||     \\___|    |     \/\\  \/        \\|    |___\r\n$(tput setaf 4)\/_________\/ \\________\/____|     \\\/ \/_________\/|________|\r\n$(tput setaf 1) ___                 __          __   __\r\n$(tput setaf 1)|   | ____   _______\/  |______  |  | |  |   ___________\r\n$(tput setaf 1)|   |\/    \\ \/  ___\/\\   __\\__  \\ |  | |  | _\/ __ \\_  __ |\r\n$(tput setaf 1)|   |   |  |\\___ \\  |  |  \/ __ \\|  |_|  |_\\  ___\/|  | \\\/\r\n$(tput setaf 1)|___|___|__\/______| |__| (______|____|____\/\\___  |__|\r\n$(tput setaf 0)\r\n\"\r\n\r\necho \"\r\n$(tput setaf 2)This installer was created by $(tput setaf 1)Parkeymon#0001\r\n\"\r\n\r\n# Egg version checking, do not touch!\r\ncurrentVersion=\"2.4.0\"\r\nlatestVersion=$(curl --silent \"https:\/\/api.github.com\/repos\/Parkeymon\/EXILED-SCP-SL-egg\/releases\/latest\" | jq -r .tag_name)\r\n# Default port is 9000 so 7777 + 1223 = 9000 and when you have more servers each port is one more.\r\nbotPort=$((SERVER_PORT + 1223))\r\n\r\nif [ \"${currentVersion}\" == \"${latestVersion}\" ]; then\r\n  echo \"$(tput setaf 2)Installer is up to date\"\r\nelse\r\n\r\n  echo \"\r\n  $(tput setaf 1)THE INSTALLER IS NOT UP TO DATE!\r\n\r\n    Current Version: $(tput setaf 1)${currentVersion}\r\n    Latest: $(tput setaf 2)${latestVersion}\r\n\r\n  $(tput setaf 3)Please update to the latest version found here: https:\/\/github.com\/Parkeymon\/EXILED-SCP-SL-egg\/releases\/latest\r\n\r\n  \"\r\n  sleep 10\r\nfi\r\n\r\n# Download SteamCMD and Install\r\ncd \/tmp || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/TMP\"\r\n  exit\r\n}\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\ncd \/mnt\/server\/steamcmd || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/mnt\/server\/steamcmd\"\r\n  exit\r\n}\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\nif [ \"${BETA_TAG}\" == \"none\" ]; then\r\n  .\/steamcmd.sh +force_install_dir \/mnt\/server +login anonymous +app_update \"${SRCDS_APPID}\" validate +quit\r\nelse\r\n  .\/steamcmd.sh +force_install_dir \/mnt\/server +login anonymous +app_update \"${SRCDS_APPID}\" -beta \"${BETA_TAG}\" validate +quit\r\nfi\r\n\r\n# Install SL with SteamCMD\r\ncd \/mnt\/server || {\r\n  echo \"$(tput setaf 1) FAILED TO MOUNT TO \/mnt\/server\"\r\n  exit\r\n}\r\n\r\nmkdir .egg\r\n\r\necho \"$(tput setaf 4)Configuring start.sh$(tput setaf 0)\"\r\nrm .\/.egg\/start.sh\r\ntouch \".\/.egg\/start.sh\"\r\nchmod +x .\/.egg\/start.sh\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]; then\r\n  echo \"#!\/bin\/bash\r\n    .\/.egg\/DIBot\/DiscordIntegration.Bot > \/dev\/null &\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >>.\/.egg\/start.sh\r\n  echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin and Discord Integration.$(tput setaf 0)\"\r\n\r\nelse\r\n  echo \"#!\/bin\/bash\r\n    .\/LocalAdmin \\${SERVER_PORT}\" >>.\/.egg\/start.sh\r\n  echo \"$(tput setaf 4)Finished configuring start.sh for LocalAdmin.$(tput setaf 0)\"\r\n\r\nfi\r\n\r\nif [ \"${INSTALL_BOT}\" == \"true\" ]; then\r\n  mkdir \/mnt\/server\/.egg\/DIBot\r\n\r\n  echo \"$(tput setaf 4)Installing latest Discord Integration bot version.\"\r\n  wget -q https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/DiscordIntegration.Bot -P \/mnt\/server\/.egg\/DIBot\r\n\r\n  chmod +x \/mnt\/server\/.egg\/DIBot\/DiscordIntegration.Bot\r\n\r\n  yq -i \".TcpServers.1.Port = \\\"${botPort}\\\"\" \/mnt\/server\/DiscordIntegration-config.json\r\n  echo \"$(tput setaf 5)Automatically setting bot port in bot configs as ${botPort}\"\r\n\r\n  if [ \"${BOT_TOKEN}\" == \"none\" ]; then\r\n    echo \"$(tput setaf 4)Bot token is not set! Skipping auto configuration.$(tput setaf 0)\"\r\n  else\r\n    yq -i \".BotTokens.1 = \\\"${BOT_TOKEN}\\\"\" \/mnt\/server\/DiscordIntegration-config.json\r\n    echo \"$(tput setaf 5)Automatically setting bot token in bot configs.\"\r\n  fi\r\n\r\n  if [ \"${DISCORD_ID}\" == \"none\" ]; then\r\n    echo \"$(tput setaf 4)Discord server ID is not set! Skipping auto configuration.$(tput setaf 0)\"\r\n  else\r\n    yq -i \".DiscordServerIds.1 = \\\"${DISCORD_ID}\\\"\" \/mnt\/server\/DiscordIntegration-config.json\r\n    echo \"$(tput setaf 5)Automatically setting bot port in bot configs as ${DISCORD_ID}\"\r\n  fi\r\n\r\nelse\r\n  echo \"$(tput setaf 4)Skipping bot install...$(tput setaf 0)\"\r\nfi\r\n\r\nif [ \"${INSTALL_EXILED}\" == \"true\" ]; then\r\n  echo \"$(tput setaf 4)Downloading $(tput setaf 1)EXILED$(tput setaf 0)..\"\r\n  mkdir .config\/\r\n  echo \"$(tput setaf 4)Downloading latest $(tput setaf 1)EXILED$(tput setaf 4) Installer\"\r\n  rm Exiled.Installer-Linux\r\n  wget -q https:\/\/github.com\/galaxy119\/EXILED\/releases\/latest\/download\/Exiled.Installer-Linux\r\n  chmod +x .\/Exiled.Installer-Linux\r\n\r\n  if [ \"${EXILED_PRE}\" == \"true\" ]; then\r\n    echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED (pre-release)...\"\r\n    .\/Exiled.Installer-Linux --pre-releases\r\n\r\n  elif [ \"${EXILED_PRE}\" == \"false\" ]; then\r\n    echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED$(tput setaf 0)...\"\r\n    .\/Exiled.Installer-Linux\r\n\r\n  else\r\n    echo \"$(tput setaf 4)Installing $(tput setaf 1)EXILED$(tput setaf 0) version: ${EXILED_PRE} ..\"\r\n    .\/Exiled.Installer-Linux --target-version \"${EXILED_PRE}\"\r\n\r\n  fi\r\nelse\r\n  echo \"Skipping Exiled installation.\"\r\nfi\r\n\r\nif [ \"${REMOVE_UPDATER}\" == \"true\" ]; then\r\n  echo \"Removing Exiled updater.\"\r\n  rm \/mnt\/server\/.config\/EXILED\/Plugins\/Exiled.Updater.dll\r\nelse\r\n  echo \"Skipping EXILED updater removal.\"\r\nfi\r\n\r\nif [ \"${INSTALL_INTEGRATION}\" == \"true\" ]; then\r\n  echo \"Installing Latest Discord Integration Plugin...\"\r\n\r\n  echo \"Removing old Discord Integration\"\r\n  rm \/mnt\/server\/.config\/EXILED\/Plugins\/DiscordIntegration_Plugin.dll\r\n  rm \/mnt\/server\/.config\/EXILED\/Plugins\/DiscordIntegration.dll\r\n\r\n  echo \"$(tput setaf 5)Grabbing plugin and dependencies.\"\r\n  wget -q https:\/\/github.com\/Exiled-Team\/DiscordIntegration\/releases\/latest\/download\/Plugin.tar.gz -P \/mnt\/server\/.config\/EXILED\/Plugins\r\n\r\n  echo \"Extracting...\"\r\n  tar xzvf \/mnt\/server\/.config\/EXILED\/Plugins\/Plugin.tar.gz -C \/mnt\/server\/.config\/EXILED\/Plugins\r\n  rm \/mnt\/server\/.config\/EXILED\/Plugins\/Plugin.tar.gz\r\n\r\n  if [ -f \"\/mnt\/server\/.config\/EXILED\/Configs\/${SERVER_PORT}-config.yml\" ]; then\r\n        echo \"Exiled config exists, no need to create\"\r\n    else\r\n      mkdir \/mnt\/server\/.config\/EXILED\/Configs\r\n      touch \/mnt\/server\/.config\/EXILED\/Configs\/\"${SERVER_PORT}\"-config.yml\r\n      echo \"Exiled config did not exist and was generated.\"\r\n  fi\r\n\r\n  chmod 777 \/mnt\/server\/.config\/EXILED\/Configs\/\"${SERVER_PORT}\"-config.yml\r\n  yq -i \".discord_integration.bot.port = \\\"${botPort}\\\"\" \/mnt\/server\/.config\/EXILED\/Configs\/\"${SERVER_PORT}-config.yml\"\r\n  echo \"$(tput setaf 5)Automatically setting bot port in server configs as ${botPort}\"\r\n\r\nelse\r\n  echo \"Skipping Discord integration plugin install\"\r\nfi\r\n\r\nif [ \"${INSTALL_ADMINTOOLS}\" == \"true\" ]; then\r\n  echo \"Removing existing Admin Tools version.\"\r\n  rm .config\/EXILED\/Plugins\/AdminTools.dll\r\n  echo \"$(tput setaf 5)Installing latest Admin Tools\"\r\n  wget -q https:\/\/github.com\/Exiled-Team\/AdminTools\/releases\/latest\/download\/AdminTools.dll -P \/mnt\/server\/.config\/EXILED\/Plugins\r\n\r\nelse\r\n  echo \"Skipping Admin Tools install.\"\r\nfi\r\n\r\nif [ \"${INSTALL_UTILITIES}\" == \"true\" ]; then\r\n  echo \"Removing existing Common Utilities version.\"\r\n  rm .config\/EXILED\/Plugins\/Common_Utilities.dll\r\n  echo \"$(tput setaf 5)Installing Common Utilities.\"\r\n  wget -q https:\/\/github.com\/Exiled-Team\/Common-Utils\/releases\/latest\/download\/Common_Utilities.dll -P \/mnt\/server\/.config\/EXILED\/Plugins\r\nelse\r\n  echo \"Skipping Common Utilities Install\"\r\nfi\r\n\r\nif [ \"${INSTALL_SCPSTATS}\" == \"true\" ]; then\r\n  echo \"Removing existing SCPStats version.\"\r\n  rm .config\/EXILED\/Plugins\/SCPStats.dll\r\n  echo \"$(tput setaf 5)Installing SCPStats\"\r\n  wget -q https:\/\/github.com\/SCPStats\/Plugin\/releases\/latest\/download\/SCPStats.dll -P \/mnt\/server\/.config\/EXILED\/Plugins\r\nelse\r\n  echo \"Skipping SCPStats Install.\"\r\nfi\r\n\r\nfunction installPlugin() {\r\n  # Caches the plugin to a json so only one request to Github is needed\r\n  curl --silent -u \"${GITHUB_USERNAME}:${GITHUB_TOKEN}\" \"$1\" | jq . > plugin.json\r\n\r\n  if [ \"$(jq -r .assets[0].browser_download_url plugin.json)\" == null ]; then\r\n    echo \"\r\n    $(tput setaf 5)ERROR GETTING PLUGIN DOWNLOAD URL!\r\n\r\n    Inputted URL: $1\r\n\r\n    You likely inputted the incorrect URL or have been rate-limited ( https:\/\/takeb1nzyto.space\/ )\r\n    \"\r\n\r\n  fi\r\n\r\n  echo \"$(tput setaf 5)Installing $(jq -r .assets[0].name plugin.json) $(jq -r .tag_name plugin.json) by $(jq -r .author.login plugin.json)\"\r\n\r\n  # For the evil people that put the version in their plugin name the old version will need to be manually deleted\r\n  rm \/mnt\/server\/.config\/EXILED\/Plugins\/\"$(jq -r .assets[0].name plugin.json)\"\r\n\r\n  jq -r .assets[0].browser_download_url plugin.json\r\n\r\n  if [ \"${GITHUB_TOKEN}\" == \"none\" ]; then\r\n    wget -q \"$(jq -r .assets[0].browser_download_url plugin.json)\" -P \/mnt\/server\/.config\/EXILED\/Plugins\r\n  else\r\n    url=$(jq -r .assets[0].url plugin.json | sed \"s|https:\/\/|https:\/\/${GITHUB_TOKEN}:@|\")\r\n    wget -q --auth-no-challenge --header='Accept:application\/octet-stream' \"$url\" -O \/mnt\/server\/.config\/EXILED\/Plugins\/\"$(jq -r .assets[0].name plugin.json)\"\r\n  fi\r\n\r\n  rm plugin.json\r\n}\r\n\r\nif [ \"${INSTALL_CUSTOM}\" == \"true\" ]; then\r\n  touch \/mnt\/server\/.egg\/customplugins.txt\r\n\r\n  grep -v '^ *#' <\/mnt\/server\/.egg\/customplugins.txt | while IFS= read -r I; do\r\n    installPlugin \"${I}\"\r\n  done\r\n\r\nfi\r\n\r\necho \"$(tput setaf 2)Installation Complete!$(tput sgr 0)\"",
            "container": "quay.io\/parkeymon\/scpsl-install:latest",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "996560",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Beta Tag",
            "description": "Set to \"none\" for no beta.",
            "env_variable": "BETA_TAG",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:20",
            "field_type": "text"
        },
        {
            "name": "Install Exiled?",
            "description": "",
            "env_variable": "INSTALL_EXILED",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Use Exiled Pre-Releases?",
            "description": "Whether or not to install a pre-release of EXILED. To install a specific version replace the true\/false with the EXILED version number.",
            "env_variable": "EXILED_PRE",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Remove Exiled Updater?",
            "description": "Exiled updater sometimes causes problems with pterodactyl, this will automatically remove it if you want it to.",
            "env_variable": "REMOVE_UPDATER",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Install Discord Integration Bot?",
            "description": "Whether or not to install the Discord Integration bot.",
            "env_variable": "INSTALL_BOT",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Install Discord Integration Plugin?",
            "description": "Intstalls the discord integration plugin.",
            "env_variable": "INSTALL_INTEGRATION",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Install Admin Tools?",
            "description": "Automatically installs\/updates admin tools.",
            "env_variable": "INSTALL_ADMINTOOLS",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Install Common Utilities Plugin?",
            "description": "Automatically installs\/updates common utilities.",
            "env_variable": "INSTALL_UTILITIES",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Install SCPStats?",
            "description": "Whether or not to install SCPStats.\r\nMore setup info here: https:\/\/github.com\/SCPStats\/Plugin\/wiki",
            "env_variable": "INSTALL_SCPSTATS",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Auto install custom plugins?",
            "description": "",
            "env_variable": "INSTALL_CUSTOM",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "GitHub Username",
            "description": "This is used to authenticate GitHub requests so you aren't rate-limited.\r\nYou do not need to use this unless you are using custom plugin install and have enough plugins to where you could make more than 60 requests in an hour.\r\nSee here for more info: https:\/\/github.com\/Parkeymon\/EXILED-SCP-SL-egg",
            "env_variable": "GITHUB_USERNAME",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "GitHub Access Token",
            "description": "This is used to authenticate GitHub requests so you aren't rate-limited.\r\nYou do not need to use this unless you are using custom plugin install and have enough plugins to where you could make more than 60 requests in an hour.\r\nSee here for more info: https:\/\/github.com\/Parkeymon\/EXILED-SCP-SL-egg",
            "env_variable": "GITHUB_TOKEN",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Enable Auto Updater? (WIP)*",
            "description": "Enables automatic updating of SCP:SL",
            "env_variable": "AUTO_UPDATER",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:5",
            "field_type": "text"
        },
        {
            "name": "Pterodactyl Domain (WIP)*",
            "description": "An unfinished feature, do not use.",
            "env_variable": "PTERO_DOMAIN",
            "default_value": "fill this",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Pterodactyl Key (WIP)*",
            "description": "An unfinished feature, do not use.",
            "env_variable": "PTERO_KEY",
            "default_value": "fill this",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Pterodactyl Server ID (WIP)*",
            "description": "An unfinished feature, do not use.",
            "env_variable": "SERVER_ID",
            "default_value": "fill this",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Discord Bot Token",
            "description": "The token of the discord bot for Discord Integration. (If you are using it)",
            "env_variable": "BOT_TOKEN",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Discord Server ID",
            "description": "The ID of the discord server your bot is in. (If you are using it)",
            "env_variable": "DISCORD_ID",
            "default_value": "none",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        }
    ]
}